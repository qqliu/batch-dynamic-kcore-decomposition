==36442== Memcheck, a memory error detector
==36442== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==36442== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==36442== Command: ./KCore -rounds 3 -s -m /ssd1/graphs/bench_experiments/blogcatalog_sym.adj
==36442== Parent PID: 36422
==36442== 
--36442-- 
--36442-- Valgrind options:
--36442--    --leak-check=full
--36442--    --show-leak-kinds=all
--36442--    --track-origins=yes
--36442--    --verbose
--36442--    --log-file=valgrind-out-2.txt
--36442-- Contents of /proc/version:
--36442--   Linux version 4.10.0-40-generic (buildd@lcy01-amd64-005) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.5) ) #44~16.04.1-Ubuntu SMP Thu Nov 9 15:37:44 UTC 2017
--36442-- 
--36442-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--36442-- Page sizes: currently 4096, max supported 4096
--36442-- Valgrind library directory: /usr/lib/valgrind
--36442-- Reading syms from /usr0/home/quanquan/gbbs-copy/gbbs/benchmarks/KCore/JulienneDBS17/KCore
--36442-- Reading syms from /lib/x86_64-linux-gnu/ld-2.23.so
--36442--   Considering /lib/x86_64-linux-gnu/ld-2.23.so ..
--36442--   .. CRC mismatch (computed 2b0241bb wanted 2b26b6ff)
--36442--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.23.so ..
--36442--   .. CRC is valid
--36442-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--36442--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--36442--   .. CRC mismatch (computed eea41ea9 wanted 2009db78)
--36442--    object doesn't have a symbol table
--36442--    object doesn't have a dynamic symbol table
--36442-- Scheduler: using generic scheduler lock implementation.
--36442-- Reading suppressions file: /usr/lib/valgrind/default.supp
==36442== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-36442-by-quanquan-on-???
==36442== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-36442-by-quanquan-on-???
==36442== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-36442-by-quanquan-on-???
==36442== 
==36442== TO CONTROL THIS PROCESS USING vgdb (which you probably
==36442== don't want to do, unless you know exactly what you're doing,
==36442== or are doing some strange experiment):
==36442==   /usr/lib/valgrind/../../bin/vgdb --pid=36442 ...command...
==36442== 
==36442== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==36442==   /path/to/gdb ./KCore
==36442== and then give GDB the following command
==36442==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=36442
==36442== --pid is optional if only one valgrind process is running
==36442== 
--36442-- REDIR: 0x401cf40 (ld-linux-x86-64.so.2:strlen) redirected to 0x3809e181 (???)
--36442-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--36442--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--36442--   .. CRC mismatch (computed 2567ccf6 wanted 49420590)
--36442--    object doesn't have a symbol table
--36442-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--36442--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--36442--   .. CRC mismatch (computed 0e27c9a8 wanted ac585421)
--36442--    object doesn't have a symbol table
==36442== WARNING: new redirection conflicts with existing -- ignoring it
--36442--     old: 0x0401cf40 (strlen              ) R-> (0000.0) 0x3809e181 ???
--36442--     new: 0x0401cf40 (strlen              ) R-> (2007.0) 0x04c31020 strlen
--36442-- REDIR: 0x401b890 (ld-linux-x86-64.so.2:index) redirected to 0x4c30bc0 (index)
--36442-- REDIR: 0x401bab0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c320d0 (strcmp)
--36442-- REDIR: 0x401dca0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c35270 (mempcpy)
--36442-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28
--36442--    object doesn't have a symbol table
--36442-- Reading syms from /lib/x86_64-linux-gnu/libm-2.23.so
--36442--   Considering /lib/x86_64-linux-gnu/libm-2.23.so ..
--36442--   .. CRC mismatch (computed 139cd6a9 wanted 1d3df7e7)
--36442--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.23.so ..
--36442--   .. CRC is valid
--36442-- Reading syms from /lib/x86_64-linux-gnu/libgcc_s.so.1
--36442--    object doesn't have a symbol table
--36442-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.23.so
--36442--   Considering /usr/lib/debug/.build-id/3d/b0b0ee6244f5b89ab1d535f91b17d162cc1701.debug ..
--36442--   .. build-id is valid
--36442-- Reading syms from /lib/x86_64-linux-gnu/libc-2.23.so
--36442--   Considering /lib/x86_64-linux-gnu/libc-2.23.so ..
--36442--   .. CRC mismatch (computed 53ae885f wanted a963d847)
--36442--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.23.so ..
--36442--   .. CRC is valid
--36442-- REDIR: 0x59eba80 (libc.so.6:strcasecmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59e7300 (libc.so.6:strcspn) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59edd70 (libc.so.6:strncasecmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59e9770 (libc.so.6:strpbrk) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59e9b00 (libc.so.6:strspn) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59eb1cb (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59e9480 (libc.so.6:rindex) redirected to 0x4c308a0 (rindex)
--36442-- REDIR: 0x59e0180 (libc.so.6:malloc) redirected to 0x4c2db20 (malloc)
--36442-- REDIR: 0x59e77a0 (libc.so.6:strlen) redirected to 0x4c30f60 (strlen)
--36442-- REDIR: 0x59eac70 (libc.so.6:__GI_memcmp) redirected to 0x4c33b90 (__GI_memcmp)
--36442-- REDIR: 0x59e5d50 (libc.so.6:strcmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x59fb5f0 (libc.so.6:__strcmp_sse2_unaligned) redirected to 0x4c31f90 (strcmp)
--36442-- REDIR: 0x59f0470 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x5aa9f60 (libc.so.6:__memcpy_avx_unaligned) redirected to 0x4c324a0 (memcpy@@GLIBC_2.14)
--36442-- REDIR: 0x4ee0080 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4c2e080 (operator new(unsigned long))
--36442-- REDIR: 0x59e7bf0 (libc.so.6:__GI_strncmp) redirected to 0x4c31710 (__GI_strncmp)
--36442-- REDIR: 0x59ea8e0 (libc.so.6:memchr) redirected to 0x4c32170 (memchr)
--36442-- REDIR: 0x59eb070 (libc.so.6:__GI_memmove) redirected to 0x4c347e0 (__GI_memmove)
--36442-- REDIR: 0x59e0b10 (libc.so.6:memalign) redirected to 0x4c2ff20 (memalign)
--36442-- REDIR: 0x59e0d80 (libc.so.6:calloc) redirected to 0x4c2faa0 (calloc)
--36442-- REDIR: 0x4ede360 (libstdc++.so.6:operator delete(void*)) redirected to 0x4c2f1e0 (operator delete(void*))
==36442== Warning: set address range perms: large range [0x4f604100, 0x7340be00) (undefined)
--36442-- REDIR: 0x59eac30 (libc.so.6:bcmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--36442-- REDIR: 0x5aca4f0 (libc.so.6:__memcmp_sse4_1) redirected to 0x4c33cd0 (__memcmp_sse4_1)
--36442-- REDIR: 0x5aa9a70 (libc.so.6:__memmove_avx_unaligned) redirected to 0x4c32230 (memcpy@GLIBC_2.2.5)
--36442-- REDIR: 0x59eb430 (libc.so.6:__GI_mempcpy) redirected to 0x4c34fa0 (__GI_mempcpy)
==36442== Warning: set address range perms: large range [0xfcc1a100, 0x121a13e00) (undefined)
--36442-- REDIR: 0x59f27e0 (libc.so.6:strchrnul) redirected to 0x4c34da0 (strchrnul)
--36442-- REDIR: 0x59f04f0 (libc.so.6:__GI_memcpy) redirected to 0x4c32b00 (__GI_memcpy)
--36442-- REDIR: 0x59e0540 (libc.so.6:free) redirected to 0x4c2ed80 (free)
==36442== Warning: set address range perms: large range [0xfcc1a0e8, 0x121a13e18) (noaccess)
==36442== Warning: set address range perms: large range [0x4f6040e8, 0x7340be18) (noaccess)
==36442== 
==36442== HEAP SUMMARY:
==36442==     in use at exit: 6,364,160 bytes in 4 blocks
==36442==   total heap usage: 4,137 allocs, 4,133 frees, 3,539,516,934 bytes allocated
==36442== 
==36442== Searching for pointers to 4 not-freed blocks
==36442== Checked 132,096 bytes
==36442== 
==36442== 72,704 bytes in 1 blocks are still reachable in loss record 1 of 2
==36442==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==36442==    by 0x4EDC3A5: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==36442==    by 0x40106F9: call_init.part.0 (dl-init.c:72)
==36442==    by 0x401080A: call_init (dl-init.c:30)
==36442==    by 0x401080A: _dl_init (dl-init.c:120)
==36442==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==36442==    by 0x5: ???
==36442==    by 0xFFEFFFFDA: ???
==36442==    by 0xFFEFFFFE2: ???
==36442==    by 0xFFEFFFFEA: ???
==36442==    by 0xFFEFFFFEC: ???
==36442==    by 0xFFEFFFFEF: ???
==36442==    by 0xFFEFFFFF2: ???
==36442== 
==36442== 6,291,456 bytes in 3 blocks are definitely lost in loss record 2 of 2
==36442==    at 0x4C2FFC6: memalign (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==36442==    by 0x4EE014A: operator new(unsigned long, std::align_val_t) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==36442==    by 0x40A088: parlay::pool_allocator::allocate_large(unsigned long) (alloc.h:71)
==36442==    by 0x40A5E8: parlay::pool_allocator::allocate(unsigned long) (alloc.h:135)
==36442==    by 0x439A12: parlay::allocator<std::tuple<unsigned int, unsigned int> >::allocate(unsigned long) (alloc.h:254)
==36442==    by 0x42992B: std::tuple<unsigned int, unsigned int>* gbbs::new_array_no_init<std::tuple<unsigned int, unsigned int> >(unsigned long) (bridge.h:46)
==36442==    by 0x4698D2: gbbs::hist_table<unsigned int, unsigned int>::resize(unsigned long) (histogram.h:153)
==36442==    by 0x4783DB: parlay::sequence<std::tuple<unsigned int, unsigned int>, parlay::allocator<std::tuple<unsigned int, unsigned int> > > gbbs::histogram_medium<std::tuple<unsigned int, unsigned int>, unsigned int, unsigned int, parlay::delayed_sequence<unsigned int, {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::edgeMapCount_sparse<unsigned int, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty>, gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, gbbs::hist_table<unsigned int, unsigned int>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}&, unsigned int)::{lambda(unsigned long)#2}>, std::tuple<unsigned int, unsigned int> const&>(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long, {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<std::tuple<unsigned int, unsigned int> >, parlay::delayed_sequence<unsigned int, {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::edgeMapCount_sparse<unsigned int, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty>, gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, gbbs::hist_table<unsigned int, unsigned int>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}&, unsigned int)::{lambda(unsigned long)#2}><gbbs::hist_table<unsigned int, std::tuple<unsigned int, unsigned int> >, unsigned int>&) (histogram.h:244)
==36442==    by 0x459D81: parlay::sequence<std::tuple<unsigned int, unsigned int>, parlay::allocator<std::tuple<unsigned int, unsigned int> > > gbbs::histogram<std::tuple<unsigned int, unsigned int>, unsigned int, unsigned int, parlay::delayed_sequence<unsigned int, {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::edgeMapCount_sparse<unsigned int, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty>, gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, gbbs::hist_table<unsigned int, unsigned int>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}&, unsigned int)::{lambda(unsigned long)#2}>, std::tuple<unsigned int, unsigned int> const&>(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long, {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<std::tuple<unsigned int, unsigned int> >, parlay::delayed_sequence<unsigned int, {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::edgeMapCount_sparse<unsigned int, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty>, gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, gbbs::hist_table<unsigned int, unsigned int>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}&, unsigned int)::{lambda(unsigned long)#2}><gbbs::hist_table<unsigned int, std::tuple<unsigned int, unsigned int> >, unsigned int>&) (histogram.h:346)
==36442==    by 0x443BEB: {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::edgeMapCount_sparse<unsigned int, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty>, gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, gbbs::hist_table<unsigned int, unsigned int>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}&, unsigned int) (edge_map_reduce.h:121)
==36442==    by 0x430E46: {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::edgeMapCount<unsigned int, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty>, gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}&, gbbs::hist_table<unsigned int, unsigned int>&, unsigned int, long) (edge_map_reduce.h:188)
==36442==    by 0x4214AF: {lambda(std::tuple<unsigned int, unsigned int> const&)#2}<unsigned int> gbbs::nghCount<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::vertexSubsetData<gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, gbbs::vertexSubsetData<gbbs::empty>&, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(unsigned int const&)#3}, parlay::sequence<unsigned int, parlay::allocator<unsigned int> > gbbs::KCore<gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty> >(gbbs::symmetric_graph<gbbs::symmetric_vertex, gbbs::empty>&, unsigned long)::{lambda(std::tuple<unsigned int, unsigned int> const&)#2}, gbbs::hist_table<unsigned int, unsigned int>&, unsigned int) (interface.h:49)
==36442== 
==36442== LEAK SUMMARY:
==36442==    definitely lost: 6,291,456 bytes in 3 blocks
==36442==    indirectly lost: 0 bytes in 0 blocks
==36442==      possibly lost: 0 bytes in 0 blocks
==36442==    still reachable: 72,704 bytes in 1 blocks
==36442==         suppressed: 0 bytes in 0 blocks
==36442== 
==36442== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==36442== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
